### This script is divided into 6 parts.
#### PART 1 describes the comparison of physical activity levels and sedentary activity levels across ethnicity
# The "data" contains total MET levels/week and total sitting time as defined by iPAQ

data <- data %>% left_join (.,data_diet %>% select (Barcode,age,sex,Ethnicity)) %>% mutate (agecat_decade =
                                            case_when (age<40~"30-49",
                                                       age>=40 & age<50~"40-49",
                                                       age>=50 & age<60~"50-59",
                                                       age>60~">60")) %>%
  mutate(agecat_decade = fct_relevel(agecat_decade, "30-49", "40-49","50-59",">60"))

lm_METtot_truncate <- lm(METtot_truncate ~ sex + Ethnicity + agecat_decade, data=data)
emm_METtot_truncate <- emmip(lm_METtot_truncate, Ethnicity ~ agecat_decade, CIs=T, plotit = F)
ggplot(data=emm_METtot_truncate, aes(x=xvar, y=yvar, group=Ethnicity))+
  geom_linerange(aes(ymin=LCL, ymax=UCL, color=Ethnicity), size=.5)+ 
  geom_line(aes(linetype=Ethnicity, color=Ethnicity),size=.5)+
  geom_point(aes(shape=Ethnicity, color=Ethnicity),size=2.5)+
  scale_color_manual(values=c("#fc8d62", "#66c2a5", "#8da0cb"))+
  theme_classic() + labs(y = "Total MET /week",x = "Age (years)") + theme(legend.position="top")

lm_ipaq_sit_totweekav <- lm(ipaq_sit_totweekav ~ sex + Ethnicity + agecat_decade, data=data)
emm_ipaq_sit_totweekav <- emmip(lm_ipaq_sit_totweekav, Ethnicity ~ agecat_decade, CIs=T, plotit = F)
ggplot(data=emm_ipaq_sit_totweekav, aes(x=xvar, y=yvar, group=Ethnicity))+
  geom_linerange(aes(ymin=LCL, ymax=UCL, color=Ethnicity), size=.5)+ 
  geom_line(aes(linetype=Ethnicity, color=Ethnicity),size=.5)+
  geom_point(aes(shape=Ethnicity, color=Ethnicity),size=2.5)+
  scale_color_manual(values=c("#fc8d62", "#66c2a5", "#8da0cb"))+
  theme_classic() + labs(y = "Sitting time (hour/day)",x = "Age (years)") + theme(legend.position="top")


#### PART 2 illustrates the accelerometry-based physical activity across major ethnic groups
# The "data" contains processed accelerometry data that are externally processed using Wave (https://github.com/MRC-Epid/Wave)
# The "data" also contains the Total MET/week, see part 1
# The processed accelerometry data are not currently available in public domain.
# Please approach helios_science@ntu.edu.sg for data access request.

dquintiles <- quantile(data_ipaq_enmo$METtot_truncate, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
data_ipaq_enmo$METtot_trunc_quin <- cut(data_ipaq_enmo$METtot_truncate, breaks = quintiles, labels = FALSE)

enmo_corr <- cor.test(data_ipaq_enmo$METtot_trunc_quin,data_ipaq_enmo$enmo_mean)

data_ipaq_enmo %>% filter (!is.na(METtot_trunc_quin)) %>% ggplot (aes(x=factor(METtot_trunc_quin),y=enmo_mean)) +
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75),color="darkolivegreen4", fill="darkolivegreen3",alpha=0.3)+ geom_jitter(color="chartreuse4",width = 0.2,size=0.5,alpha=0.6)+ylim(0,75)+
  theme_classic() + labs(y = "ENMO (miligravity)",x = "Total MET/ week, quintiles")


#### PART 3 breaks down the physical activity by domain across ethnicity
PA_3d <- Main%>%filter(FREG5_Ethnic_Group!="O")%>%
  dplyr::select(FREG0_PID, FREG5_Ethnic_Group, METworktot, METtransporttot, METdomestictot, METleisuretot, METtot)

PA_3d [is.na(PA_3d )] <- 0
PA_3d  <- PA_3d%>%filter(METtot>0)

PA_3d <- PA_3d%>%
  group_by(FREG5_Ethnic_Group)%>%
  summarise_at(c("METworktot", "METtransporttot", "METdomestictot", "METleisuretot", "METtot"), sum, na.rm = TRUE)%>%
  mutate(work=METworktot/METtot,
         trans=METtransporttot/METtot,
         home=METdomestictot/METtot,
         leisure=METleisuretot/METtot)%>%
  dplyr::select(FREG5_Ethnic_Group, work, trans, home, leisure)%>%
  gather(domains, proportion, work:leisure)%>%
  mutate(domains=factor(domains, levels = c("leisure","home","trans","work"),labels=c("Leisure","Domestic", "Transportation","Work")))

ggplot(PA_3d)+
  geom_linerange(aes(x = domains, ymin = 0, ymax = proportion, colour = FREG5_Ethnic_Group), 
                 position = position_dodge(width = 0.8))+
  geom_point(aes(x = domains, y = proportion, colour = FREG5_Ethnic_Group, shape = FREG5_Ethnic_Group),
             position = position_dodge(width = 0.8), size=3)+
  scale_color_manual(values = c("#fc8d62","#8da0cb","#66c2a5"))+
  scale_shape_manual(values = c(16, 15, 17)) +
  coord_flip()+
  theme_classic()+
  theme(legend.position="none",
        legend.title=element_blank())+
  ylab("Proportion")+
  xlab("")

#### PART 4 demonstrates the distribution of physical activity intensity levels
PA_3e <- Main %>%filter(FREG5_Ethnic_Group!="O")%>%
  dplyr::select(FREG0_PID, FREG5_Ethnic_Group, METwalktot_truncate, METmodtot_truncate, METvigtot_truncate, METtot_truncate)%>%
  filter(!is.na(METtot_truncate))%>%
  group_by(FREG5_Ethnic_Group)%>%
  summarise(tot = sum(METtot_truncate),
            tot_walk=sum(METwalktot_truncate),
            tot_mod=sum(METmodtot_truncate),
            tot_vig=sum(METvigtot_truncate))%>%
  mutate(walk=tot_walk/tot,
         mod=tot_mod/tot,
         vig=tot_vig/tot)%>%
  dplyr::select(FREG5_Ethnic_Group, walk, mod, vig)%>%
  gather(intensity, proportion, walk:vig)%>%
  mutate(intensity=factor(intensity, levels = c("vig","mod","walk"),labels=c("Vigorous activities","Moderate activities", "Walking")))

ggplot(PA_3e, aes(x=FREG5_Ethnic_Group, y=proportion, fill=intensity))+
  geom_col(position=position_stack(1.1), stat="identity",width=2/3, binwidth=0)+
  coord_flip() +
  theme_classic()+
  scale_fill_manual(values = c("#ADA3D0","#F7CF88","#E88386"))+
  theme(legend.position="top",
        legend.title=element_blank())+
  ylab("Proportion")+
  xlab("")

#### PART 5 describes the proportion of physical activity levels according to WHO guideline
PA_3f <- Main %>%filter(FREG5_Ethnic_Group!="O")%>%
  mutate(time_modvig=time_mod_trunc+time_vig_trunc*2,
         days_modvig=Pa2+Pa4+Pa10+Pa14+Pa16+Pa18+Pa22+Pa24,
         meetguideline=ifelse(time_modvig>=150&days_modvig>=2,1,0),
         FREG5_Ethnic_Group=case_when(FREG5_Ethnic_Group=="C"~"Chinese",
                                      FREG5_Ethnic_Group=="I"~"Indian",
                                      FREG5_Ethnic_Group=="M"~"Malay"))

PA_3f <- prop.table(table(PA_3f$meetguideline, PA_3f2$FREG5_Ethnic_Group),2)[2,]%>%
as.data.frame()%>%
rownames_to_column()%>%
mutate(`Not meet guideline`=1-.)

names(PA_3f) <- c("Ethnicity", "Meet guideline", "Not meet guideline")

PA_3f <- PA_3f %>%gather(test, percentage,`Meet guideline`:`Not meet guideline`)%>%
  mutate(percentage=ifelse(test=="Not meet guideline", -percentage, percentage))

ggplot(PA_3f, aes(Ethnicity, percentage, fill=test))+
  geom_col(position = 'stack', width = .7)+
  coord_flip()+
  geom_hline(yintercept = 0, lwd=2, color="white")+
  annotate(geom="text", x="Chinese", y=-0.75, label="66%", color="Black")+
  annotate(geom="text", x="Indian", y=-0.75, label="51%", color="Black")+
  annotate(geom="text", x="Malay", y=-0.75, label="47%", color="Black")+
  annotate(geom="text", x="Chinese", y=0.6, label="34%", color="Black")+
  annotate(geom="text", x="Indian", y=0.6, label="49%", color="Black")+
  annotate(geom="text", x="Malay", y=0.6, label="53%", color="Black")+
  theme_classic()+
  scale_fill_manual(values = c("#F6CA9D","#A1C4F2"), breaks=c('Not meet guideline', 'Meet guideline'))+
  #scale_y_discrete(limits=c("Chinese","Indian","Malay"))+
  theme(legend.position="top",
        legend.title=element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size=12, face="bold"),
        axis.ticks.x=element_blank(),
        axis.ticks.y=element_blank(),
        axis.line = element_blank())+
  ylab("")+
  xlab("")

#### PART 6 links the physical activity with representative physiological trait and disease outcomes
# Here we link physical activity with lipid panel and hypercholesterolemia.
# We chose these traits to provide a variety of different trait/disease outcome that is different from the dietary figure.

data_diet_method <- data %>% mutate (ln_TC=log(TCmmolL),ln_hdl=log(HDLmmolL),ln_ldl=log(LDLmmolL),ln_trig=log(TRIGmmolL))
data_diet_method$ln_ldl[is.infinite(data_diet_method$ln_ldl)] <- NA
data_diet_method <- data_diet_method %>% mutate (z_TC=zscores(ln_TC),z_hdl=zscores(ln_hdl),z_ldl=zscores(ln_ldl),z_trig=zscores(ln_trig))

data_paq_lipid <- data_diet_method %>% select (age,sex,Chinese,Malay,Indian,METtot_truncate_axiv_correct,z_TC,z_hdl,z_ldl,z_trig)
data_paq_lipid <- data_paq_lipid %>% mutate(sex=recode(sex, "Female"="2", "Male"="1"), TC_hdl=z_TC/z_hdl) %>%
  mutate (sex=as.numeric(sex)) %>%
  na.omit()
data_paq_lipid <- partial.r(data_paq_lipid,c(6:11),cs(sex,age,Chinese,Malay,Indian)) #partial correlation
data_paq_lipid <- as.data.frame(data_paq_lipid)
data_paq_lipid <- data_paq_lipid %>% rownames_to_column(.,var="rownames") %>%
  select (rownames,METtot_truncate_axiv_correct) %>% dplyr::rename(r=METtot_truncate_axiv_correct) %>%
  mutate(t=r*sqrt(8493-4)/(1-r^2), p=2*pt(abs(t),df=(8493-4),lower.tail=F),logp=-log(p)) %>%
  filter (rownames!="METtot_truncate_axiv_correct") %>% mutate(rownames=c("TC","HDL","LDL","Triglycerides","TC/HDL"))
  
data_paq_lipid_corr <- data_paq_lipid %>% select(rownames,r) %>% column_to_rownames(., var = "rownames") %>% t() %>% as.matrix()
data_paq_lipid_p  <- data_paq_lipid %>% select(rownames,logp) %>% column_to_rownames(., var = "rownames") %>% t() %>% as.matrix()

col <- circlize::colorRamp2(c(-0.07,0,0.07), c("coral","white","darkolivegreen3"))
colp <- circlize::colorRamp2(c(0,20), c("white","blue"))
paq_lipid_corrplot <- ComplexHeatmap::Heatmap (data_paq_lipid_corr,col=col, name="Pearson's r",       
                         show_column_names= F,show_row_names= F,
                         cluster_rows = F,cluster_columns = F,width = unit(10, "cm"),
                         cell_fun = function(j, i, x, y, width, height, fill) {
                           grid::grid.text(sprintf("%.2f",data_paq_lipid_corr[i, j]), x, y, gp = grid::gpar(fontsize = 10))
                         })
paq_lipid_pplot <-ComplexHeatmap::Heatmap (data_paq_lipid_p,col=colp, name="-log(p)",       
                         show_column_names= T,show_row_names= F,
                         cluster_rows = F,cluster_columns = F,width = unit(10, "cm"),
                         cell_fun = function(j, i, x, y, width, height, fill) {
                           grid::grid.text(sprintf("%.3f",data_paq_lipid_p[i, j]), x, y, gp = grid::gpar(fontsize = 10))
                         })
paq_lipid_plot_list = paq_lipid_corrplot %v%  paq_lipid_pplot


MET_highchol_chi <-glm (highchol ~ age + sex + METtot_truncate_axiv_correct, data=(data %>% filter (Chinese==1)), family = "binomial")
MET_highchol_mal <-glm (highchol ~ age + sex + METtot_truncate_axiv_correct, data=(data %>% filter (Malay==1)), family = "binomial")
MET_highchol_ind <-glm (highchol ~ age + sex + METtot_truncate_axiv_correct, data=(data %>% filter (Indian==1)), family = "binomial")
MET_highchol_all <-glm (highchol ~ Chinese + Malay + Indian + age + sex + METtot_truncate_axiv_correct, data=data, family = "binomial")
disease_logit <-function(x){
  y <- as.data.frame(confint(x)) %>% rownames_to_column() %>%
    filter (rowname !="(Intercept)" & rowname !="age" & rowname !="sexMale")
  z <- as.data.frame(x[["coefficients"]]) %>% rownames_to_column() %>%
    filter (rowname !="(Intercept)" & rowname !="age" & rowname !="sexMale")
  y <- merge (y,z,by="rowname") %>% dplyr::rename (predict=1,lower_ci=2,upper_ci=3,beta=4)%>%
    mutate (lower_ci = exp(lower_ci), upper_ci=exp(upper_ci),odd=exp(beta)) %>% select (-beta)
  return(y)
}

MET_highchol_list  <- list (MET_highchol_chi,MET_highchol_mal,MET_highchol_ind)
MET_highchol_list2 <- lapply(MET_highchol_list,disease_logit)
MET_highchol_tbl   <- bind_rows(MET_highchol_list2,.id = "ethnic")
MET_highchol_tbl$ethnic<- case_when(
  MET_highchol_tbl$ethnic == 1 ~ "Chinese",
  MET_highchol_tbl$ethnic == 2 ~ "Malay",
  MET_highchol_tbl$ethnic == 3 ~ "Indian")

disease_logit_all <-function(x){
  y <- as.data.frame(confint(x)) %>% rownames_to_column() %>%
    filter (rowname =="METtot_truncate_axiv_correct")
  z <- as.data.frame(x[["coefficients"]]) %>% rownames_to_column() %>%
    filter (rowname =="METtot_truncate_axiv_correct")
  y <- merge (y,z,by="rowname") %>% dplyr::rename (predict=1,lower_ci=2,upper_ci=3,beta=4)%>%
    mutate (lower_ci = exp(lower_ci), upper_ci=exp(upper_ci),odd=exp(beta)) %>% select (-beta)
  return(y)
}
MET_highchol_all2<- disease_logit_all(MET_highchol_all)
MET_highchol_all_tbl<- bind_rows(MET_highchol_all2,.id = "ethnic")
MET_highchol_all_tbl$ethnic<- case_when(MET_highchol_all_tbl$ethnic == 1 ~ "All")
MET_highchol_tbl <- rbind (MET_highchol_all_tbl,MET_highchol_tbl) 
MET_highchol_tbl$ethnic <- as.factor(MET_highchol_tbl$ethnic)
MET_highchol_tbl <- MET_highchol_tbl %>% mutate(ethnic= fct_relevel(ethnic,"All","Chinese","Malay","Indian"))

ggplot(data=MET_highchol_tbl, aes(x=factor(ethnic, level=c("Indian","Malay","Chinese","All")),
                                                     y=odd,ymin=lower_ci, ymax=upper_ci,
                                                     color=factor(ethnic, level=c("Indian","Malay","Chinese","All")),
                                                     shape=factor(ethnic, level=c("Indian","Malay","Chinese","All")))) +
  geom_pointrange(fatten = 5) + coord_flip() +  # flip coordinates (puts labels on y axis)
  scale_color_manual(values = c("#8da0cb","#66c2a5","#fc8d62","black"))+
  scale_shape_manual(values = c(15,17,16,1))+
  geom_hline(yintercept=1,linetype="dashed")+
  xlab("") + ylab("OR(95%CI) Hypercholesterolemia")+theme_classic()+theme(legend.position="none")
